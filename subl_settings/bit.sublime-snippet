<snippet>
	<content><![CDATA[
struct BIT {
	// 1-indexed BIT. range 1 to n inclusive.
	vector<int> arr;
	BIT(int n) {
		arr.resize(n+1);
	}
	void add(int x, int delta) {
		assert(x > 0 && x < arr.size());
		for (int u = x; u < arr.size(); u += u&-u)
			arr[u] += delta;
	}
	void inc(int x) { add(x, 1); }
	int query(int r) {
		assert(r > 0 && r < arr.size());
		int a = 0;
		for (int q = r; q > 0; q -= q&-q)
			a += arr[q];
		return a;
	}
	int query(int l, int r) {
		assert(r > l && l > 0 && r < arr.size());
		if (l == 1) return query(r);
		return query(r) - query(l-1);
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>bitree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
